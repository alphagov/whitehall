AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  Enabled: false

AmbiguousRegexpLiteral:
  Description: Checks for ambiguous regexp literals in the first argument of a method
    invocation without parenthesis.
  Enabled: false

AssignmentInCondition:
  Description: Don't use assignment in conditions.
  Enabled: false
  AllowSafeAssignment: true

BlockAlignment:
  Description: Align block ends correctly.
  Enabled: false

ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the keyword.
  Enabled: false

Debugger:
  Description: Check for debugger calls.
  Enabled: false

# Supports --auto-correct
DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: false

ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: false

EmptyEnsure:
  Description: Checks for empty ensure block.
  Enabled: false

EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: false

EndAlignment:
  Description: Align ends correctly.
  Enabled: false
  AlignWith: keyword
  SupportedStyles:
  - keyword
  - variable

EndInMethod:
  Description: END blocks should not be placed inside method definitions.
  Enabled: false

EnsureReturn:
  Description: Never use return in an ensure block.
  Enabled: false

Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: false

HandleExceptions:
  Description: Don't suppress exception.
  Enabled: false

InvalidCharacterLiteral:
  Description: Checks for invalid character literals with a non-escaped whitespace character.
  Enabled: false

LiteralInCondition:
  Description: Checks of literals used in conditions.
  Enabled: false

LiteralInInterpolation:
  Description: Checks for literals used in interpolation.
  Enabled: false

Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  Enabled: false

ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  Enabled: false

RequireParentheses:
  Description: Use parentheses in the method call to avoid confusion about precedence.
  Enabled: false

# Supports --auto-correct
RescueException:
  Description: Avoid rescuing the Exception class.
  Enabled: false

ShadowingOuterLocalVariable:
  Description: Do not use the same name as outer local variable for block arguments
    or block local variables.
  Enabled: false

SpaceBeforeFirstArg:
  Description: Put a space between a method name and the first argument in a method
    call without parentheses.
  Enabled: false

# Supports --auto-correct
StringConversionInInterpolation:
  Description: Checks for Object#to_s usage in string interpolation.
  Enabled: false

UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: false

UnreachableCode:
  Description: Unreachable code.
  Enabled: false

# Supports --auto-correct
UnusedBlockArgument:
  Description: Checks for unused block arguments.
  Enabled: false

# Supports --auto-correct
UnusedMethodArgument:
  Description: Checks for unused method arguments.
  Enabled: false

UselessAccessModifier:
  Description: Checks for useless access modifiers.
  Enabled: false

UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  Enabled: false

UselessComparison:
  Description: Checks for comparison of something with itself.
  Enabled: false

UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: false

UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: false

Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: false

# Type 'Rails' (8):
# Supports --auto-correct
ActionFilter:
  Description: Enforces consistent use of action filter methods.
  Enabled: false
  EnforcedStyle: action
  SupportedStyles:
  - action
  - filter
  Include:
  - app/controllers/**/*.rb

DefaultScope:
  Description: Checks if the argument passed to default_scope is a block.
  Enabled: false
  Include:
  - app/models/**/*.rb

# Supports --auto-correct
Delegate:
  Description: Prefer delegate method for delegations.
  Enabled: false

HasAndBelongsToMany:
  Description: Prefer has_many :through to has_and_belongs_to_many.
  Enabled: false
  Include:
  - app/models/**/*.rb

Output:
  Description: Checks for calls to puts, print, etc.
  Enabled: false

ReadWriteAttribute:
  Description: Checks for read_attribute(:attr) and write_attribute(:attr, val).
  Enabled: false
  Include:
  - app/models/**/*.rb

ScopeArgs:
  Description: Checks the arguments of ActiveRecord scopes.
  Enabled: false
  Include:
  - app/models/**/*.rb

Validation:
  Description: Use sexy validations.
  Enabled: false
  Include:
  - app/models/**/*.rb

# Type 'Style' (133):
# Supports --auto-correct
AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: false
  EnforcedStyle: indent
  SupportedStyles:
  - outdent
  - indent

AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false

# Supports --auto-correct
Alias:
  Description: Use alias_method instead of alias.
  Enabled: false

# Supports --auto-correct
AlignArray:
  Description: Align the elements of an array literal if they span more than one line.
  Enabled: false

# Supports --auto-correct
AlignHash:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: false
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
  - always_inspect
  - always_ignore
  - ignore_implicit
  - ignore_explicit

# Supports --auto-correct
AlignParameters:
  Description: Align the parameters of a method call if they span more than one line.
  Enabled: false
  EnforcedStyle: with_first_parameter
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation

# Supports --auto-correct
AndOr:
  Description: Use &&/|| instead of and/or.
  Enabled: false

ArrayJoin:
  Description: Use Array#join instead of Array#*.
  Enabled: false

AsciiComments:
  Description: Use only ascii symbols in comments.
  Enabled: false

AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  Enabled: false

# Supports --auto-correct
Attr:
  Description: Checks for uses of Module#attr.
  Enabled: false

BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  Enabled: false

BlockComments:
  Description: Do not use block comments.
  Enabled: false

BlockNesting:
  Description: Avoid excessive block nesting
  Enabled: false
  Max: 3

# Supports --auto-correct
Blocks:
  Description: Avoid using {...} for multi-line blocks (multiline chaining is always
    ugly). Prefer {...} over do...end for single-line blocks.
  Enabled: false

# Supports --auto-correct
BracesAroundHashParameters:
  Description: Enforce braces style inside hash parameters.
  Enabled: false
  EnforcedStyle: no_braces
  SupportedStyles:
  - braces
  - no_braces

CaseEquality:
  Description: Avoid explicit use of the case equality operator(===).
  Enabled: false

CaseIndentation:
  Description: Indentation of when in a case/when/[else/]end.
  Enabled: false
  IndentWhenRelativeTo: case
  SupportedStyles:
  - case
  - end
  IndentOneStep: false

# Supports --auto-correct
CharacterLiteral:
  Description: Checks for uses of character literals.
  Enabled: false

ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  Enabled: false

ClassAndModuleChildren:
  Description: Checks style of children classes and modules.
  Enabled: false
  EnforcedStyle: nested
  SupportedStyles:
  - nested
  - compact

ClassLength:
  Description: Avoid classes longer than 100 lines of code.
  Enabled: false
  CountComments: false
  Max: 100

# Supports --auto-correct
ClassMethods:
  Description: Use self when defining module/class methods.
  Enabled: false

ClassVars:
  Description: Avoid the use of class variables.
  Enabled: false

# Supports --auto-correct
CollectionMethods:
  Description: Preferred collection methods.
  Enabled: false
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: find
    find_all: select

# Supports --auto-correct
ColonMethodCall:
  Description: 'Do not use :: for method call.'
  Enabled: false

CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: false
  Keywords:
  - TODO
  - FIXME
  - OPTIMIZE
  - HACK
  - REVIEW

# Supports --auto-correct
CommentIndentation:
  Description: Indentation of comments.
  Enabled: false

ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  Enabled: false

CyclomaticComplexity:
  Description: Avoid complex methods.
  Enabled: false
  Max: 6

# Supports --auto-correct
DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  Enabled: false

# Supports --auto-correct
DeprecatedHashMethods:
  Description: Checks for use of deprecated Hash methods.
  Enabled: false

Documentation:
  Description: Document classes and non-namespace modules.
  Enabled: false

DotPosition:
  Description: Checks the position of the dot in multi-line method calls.
  Enabled: false
  EnforcedStyle: leading
  SupportedStyles:
  - leading
  - trailing

DoubleNegation:
  Description: Checks for uses of double negation (!!).
  Enabled: false

EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: false

# Supports --auto-correct
EmptyLineBetweenDefs:
  Description: Use empty lines between defs.
  Enabled: false
  AllowAdjacentOneLineDefs: false

# Supports --auto-correct
EmptyLines:
  Description: Don't use several empty lines in a row.
  Enabled: false

EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  Enabled: false

# Supports --auto-correct
EmptyLinesAroundBody:
  Description: Keeps track of empty lines around expression bodies.
  Enabled: false

# Supports --auto-correct
EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  Enabled: false

Encoding:
  Description: Use UTF-8 as the source file encoding.
  Enabled: false
  EnforcedStyle: always
  SupportedStyles:
  - when_needed
  - always

EndBlock:
  Description: Avoid the use of END blocks.
  Enabled: false

EndOfLine:
  Description: Use Unix-style line endings.
  Enabled: false

EvenOdd:
  Description: Favor the use of Fixnum#even? && Fixnum#odd?
  Enabled: false

FileName:
  Description: Use snake_case for source file names.
  Enabled: false
  Exclude:
  - '**/Rakefile'
  - '**/Gemfile'
  - '**/Capfile'

FlipFlop:
  Description: Checks for flip flops
  Enabled: false

For:
  Description: Checks use of for or each in multiline loops.
  Enabled: false
  EnforcedStyle: each
  SupportedStyles:
  - for
  - each

FormatString:
  Description: Enforce the use of Kernel#sprintf, Kernel#format or String#%.
  Enabled: false
  EnforcedStyle: format
  SupportedStyles:
  - format
  - sprintf
  - percent

GlobalVars:
  Description: Do not introduce global variables.
  Enabled: false
  AllowedVariables: []

GuardClause:
  Description: Check for conditionals that can be replaced with guard clauses
  Enabled: false
  MinBodyLength: 1

# Supports --auto-correct
HashSyntax:
  Description: 'Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax { :a => 1,
    :b => 2 }.'
  Enabled: true
  Exclude:
  - 'db/schema.rb'

  EnforcedStyle: ruby19
  SupportedStyles:
  - ruby19
  - hash_rockets

IfUnlessModifier:
  Description: Favor modifier if/unless usage when you have a single-line body.
  Enabled: false
  MaxLineLength: 80

IfWithSemicolon:
  Description: Never use if x; .... Use the ternary operator instead.
  Enabled: false

# Supports --auto-correct
IndentArray:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: false

# Supports --auto-correct
IndentHash:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: false
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
  - special_inside_parentheses
  - consistent

# Supports --auto-correct
IndentationConsistency:
  Description: Keep indentation straight.
  Enabled: false

# Supports --auto-correct
IndentationWidth:
  Description: Use 2 spaces for indentation.
  Enabled: false

Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  Enabled: false

# Supports --auto-correct
LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  Enabled: false
  EnforcedStyle: call
  SupportedStyles:
  - call
  - braces

# Supports --auto-correct
LeadingCommentSpace:
  Description: Comments should start with a space.
  Enabled: false

# Supports --auto-correct
LineEndConcatenation:
  Description: Use \ instead of + or << to concatenate two string literals at line end.
  Enabled: false

LineLength:
  Description: Limit lines to 80 characters.
  Enabled: false
  Max: 80

# Supports --auto-correct
MethodCallParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  Enabled: false

MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  Enabled: false

# Supports --auto-correct
MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  Enabled: false
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses

MethodLength:
  Description: Avoid methods longer than 10 lines of code.
  Enabled: false
  CountComments: false
  Max: 10

MethodName:
  Description: Use the configured style when naming methods.
  Enabled: false
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  Enabled: false

MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  Enabled: false

MultilineIfThen:
  Description: Never use then for multi-line if/unless.
  Enabled: true

MultilineTernaryOperator:
  Description: 'Avoid multi-line ?: (the ternary operator); use if/unless instead.'
  Enabled: false

# Supports --auto-correct
NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  Enabled: false

# Supports --auto-correct
NegatedWhile:
  Description: Favor until over while for negative conditions.
  Enabled: false

NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  Enabled: false

Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  Enabled: false
  EnforcedStyle: skip_modifier_ifs
  SupportedStyles:
  - skip_modifier_ifs
  - always

# Supports --auto-correct
NilComparison:
  Description: Prefer x.nil? to x == nil.
  Enabled: false

# Supports --auto-correct
NonNilCheck:
  Description: Checks for redundant nil checks.
  Enabled: false
  IncludeSemanticChanges: false

# Supports --auto-correct
Not:
  Description: Use ! instead of not.
  Enabled: false

# Supports --auto-correct
NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  Enabled: false
  MinDigits: 5

OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  Enabled: false

OpMethod:
  Description: When defining binary operators, name the argument other.
  Enabled: false

ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  Enabled: false
  Max: 5
  CountKeywordArgs: true

# Supports --auto-correct
ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  Enabled: false
  AllowSafeAssignment: true

# Supports --auto-correct
PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  Enabled: false
  PreferredDelimiters:
    '%': ()
    '%i': ()
    '%q': ()
    '%Q': ()
    '%r': '{}'
    '%s': ()
    '%w': ()
    '%W': ()
    '%x': ()

# Supports --auto-correct
PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  Enabled: false

PredicateName:
  Description: Check the names of predicate methods.
  Enabled: false
  NamePrefixBlacklist:
  - is_
  - has_
  - have_

# Supports --auto-correct
Proc:
  Description: Use proc instead of Proc.new.
  Enabled: false

RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  Enabled: false
  EnforcedStyle: exploded
  SupportedStyles:
  - compact
  - exploded

# Supports --auto-correct
RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  Enabled: false

RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  Enabled: false

# Supports --auto-correct
RedundantReturn:
  Description: Don't use return where it's not required.
  Enabled: false
  AllowMultipleReturnValues: false

# Supports --auto-correct
RedundantSelf:
  Description: Don't use self where it's not needed.
  Enabled: false

RegexpLiteral:
  Description: Use %r for regular expressions matching more than `MaxSlashes` '/' characters.
    Use %r only for regular expressions matching more than `MaxSlashes` '/' character.
  Enabled: false
  MaxSlashes: 1

RescueModifier:
  Description: Avoid using rescue in its modifier form.
  Enabled: false

SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been used.
  Enabled: false

# Supports --auto-correct
Semicolon:
  Description: Don't use semicolons to terminate expressions.
  Enabled: false
  AllowAsExpressionSeparator: false

# Supports --auto-correct
SignalException:
  Description: Checks for proper usage of fail and raise.
  Enabled: false
  EnforcedStyle: semantic
  SupportedStyles:
  - only_raise
  - only_fail
  - semantic

SingleLineBlockParams:
  Description: Enforces the names of some block params.
  Enabled: false
  Methods:
  - reduce:
    - a
    - e
  - inject:
    - a
    - e

# Supports --auto-correct
SingleLineMethods:
  Description: Avoid single-line methods.
  Enabled: false
  AllowIfMethodIsEmpty: true

# Supports --auto-correct
SingleSpaceBeforeFirstArg:
  Description: Checks that exactly one space is used between a method name and the first
    argument for method calls without parentheses.
  Enabled: false

# Supports --auto-correct
SpaceAfterColon:
  Description: Use spaces after colons.
  Enabled: false

# Supports --auto-correct
SpaceAfterComma:
  Description: Use spaces after commas.
  Enabled: false

# Supports --auto-correct
SpaceAfterControlKeyword:
  Description: Use spaces after if/elsif/unless/while/until/case/when.
  Enabled: false

# Supports --auto-correct
SpaceAfterMethodName:
  Description: Never put a space between a method name and the opening parenthesis in
    a method definition.
  Enabled: false

# Supports --auto-correct
SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: false

# Supports --auto-correct
SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  Enabled: false

# Supports --auto-correct
SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have or
    don't have surrounding space depending on configuration.
  Enabled: false
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
SpaceAroundOperators:
  Description: Use spaces around operators.
  Enabled: false

# Supports --auto-correct
SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: false
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
SpaceBeforeComment:
  Description: Checks for missing space between code and a comment on the same line.
  Enabled: false

# Supports --auto-correct
SpaceBeforeModifierKeyword:
  Description: Put a space before the modifier keyword.
  Enabled: false

# Supports --auto-correct
SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For blocks
    taking parameters, checks that the left brace has or doesn't have trailing space.
  Enabled: false
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# Supports --auto-correct
SpaceInsideBrackets:
  Description: No spaces after [ or before ].
  Enabled: false

# Supports --auto-correct
SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  Enabled: false
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
SpaceInsideParens:
  Description: No spaces after ( or before ).
  Enabled: false

# Supports --auto-correct
SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  Enabled: false

# Supports --auto-correct
StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes

SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  Enabled: false

Tab:
  Description: No hard tabs.
  Enabled: true

# Supports --auto-correct
TrailingBlankLines:
  Description: Checks trailing blank lines and final newline.
  Enabled: false
  EnforcedStyle: final_newline
  SupportedStyles:
  - final_newline
  - final_blank_line

TrailingComma:
  Description: Checks for trailing comma in parameter lists and literals.
  Enabled: false
  EnforcedStyleForMultiline: no_comma
  SupportedStyles:
  - comma
  - no_comma

# Supports --auto-correct
TrailingWhitespace:
  Description: Avoid trailing whitespace.
  Enabled: false

# Supports --auto-correct
TrivialAccessors:
  Description: Prefer attr_* methods to trivial readers/writers.
  Enabled: false
  ExactNameMatch: false
  AllowPredicates: false
  AllowDSLWriters: false
  Whitelist:
  - to_ary
  - to_a
  - to_c
  - to_enum
  - to_h
  - to_hash
  - to_i
  - to_int
  - to_io
  - to_open
  - to_path
  - to_proc
  - to_r
  - to_regexp
  - to_str
  - to_s
  - to_sym

UnlessElse:
  Description: Never use unless with else. Rewrite these with the positive case first.
  Enabled: false

UnneededCapitalW:
  Description: Checks for %W when interpolation is not needed.
  Enabled: false

# Supports --auto-correct
UnneededPercentX:
  Description: Checks for %x when `` would do.
  Enabled: false

# Supports --auto-correct
VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in strings.
  Enabled: false

VariableName:
  Description: Use the configured style when naming variables.
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
  - snake_case
  - camelCase

# Supports --auto-correct
WhenThen:
  Description: Use when x then ... for one-line cases.
  Enabled: false

# Supports --auto-correct
WhileUntilDo:
  Description: Checks for redundant do after while or until.
  Enabled: false

WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  Enabled: false
  MaxLineLength: 80

# Supports --auto-correct
WordArray:
  Description: Use %w or %W for arrays of words.
  Enabled: false
  MinSize: 0
